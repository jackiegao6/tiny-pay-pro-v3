server:
  port: 8091

app:
  config:
    api-version: v1
    cross-origin: '*'
    pay-mall:
      team-finish-notify-url: http://127.0.0.1:8090/api/v1/pay-mall/team-finish

# 扳手工程配置
wrench:
  config:
    system: gbm
    register:
      host: 192.168.31.25
      port: 16379

# 线程池配置
thread:
  pool:
    executor:
      config:
        core-pool-size: 20
        max-pool-size: 50
        keep-alive-time: 5000
        block-queue-size: 5000
        policy: CallerRunsPolicy

# 数据库配置；启动时配置数据库资源信息
spring:
  datasource:
    username: root
    password: 123456
    url: jdbc:mysql://192.168.31.25:13306/group_buy_market?useUnicode=true&characterEncoding=utf8&autoReconnect=true&zeroDateTimeBehavior=convertToNull&serverTimezone=Asia/Shanghai&useSSL=true
    driver-class-name: com.mysql.cj.jdbc.Driver
  hikari:
    pool-name: Retail_HikariCP
    minimum-idle: 15 #最小空闲连接数量
    idle-timeout: 180000 #空闲连接存活最大时间，默认600000（10分钟）
    maximum-pool-size: 10 #连接池最大连接数，默认是10
    auto-commit: true  #此属性控制从池返回的连接的默认自动提交行为,默认值：true
    max-lifetime: 1800000 #此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
    connection-timeout: 30000 #数据库连接超时时间,默认30秒，即30000
    connection-test-query: SELECT 1
  type: com.zaxxer.hikari.HikariDataSource

  rabbitmq:
    addresses: 192.168.31.25
    port: 5672
    username: admin
    password: admin
    listener:
      simple:
        prefetch: 1 # 每次投递n个消息，消费完在投递n个
        acknowledge-mode: auto # SpringAMQP利用AOP对我们的消息处理逻辑做了环绕增强，当业务正常执行时则自动返回ack. 当业务出现异常时，根据异常判断返回不同结果： 如果是业务异常，会自动返回nack； 如果是消息处理或校验异常，自动返回reject;

    template:
      delivery-mode: persistent # 确保全局默认设置为持久化（可选）
    config:
      producer:
        exchange: group_buy_market_exchange
        topic_team_success:
          routing_key: topic.team_success
          queue: group_buy_market_queue_2_topic_team_success

mybatis:
  mapper-locations: classpath:/mybatis/mapper/*.xml
  config-location:  classpath:/mybatis/config/mybatis-config.xml

redis:
  sdk:
    config:
      host: 192.168.31.25
      port: 16379
      pool-size: 10
      min-idle-size: 5
      idle-timeout: 30000
      connect-timeout: 5000
      retry-attempts: 3
      retry-interval: 1000
      ping-interval: 60000
      keep-alive: true


# 日志
logging:
  level:
    root: info
  config: classpath:logback-spring.xml